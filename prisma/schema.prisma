generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String   @id @default(uuid())
  name            String
  email           String   @unique
  password_hash   String
  api_url         String?
  stream_url      String?
  access_key      String?
  secret_key_hash String?
  created_at      DateTime @default(now())

  @@map("users")
}

model Symbol {
  symbol          String   @id @unique
  base_precision  Int
  base_asset      String?
  quote_precision Int
  quote_asset     String?
  min_notional    String
  min_lot_size    String
  is_favorite     Boolean  @default(false)
  created_at      DateTime @default(now())

  @@map("symbols")
}

model Order {
  id               String   @id @default(uuid())
  automation_id    String?
  symbol           String
  order_id         Decimal  @unique
  client_order_id  String
  transact_time    Decimal
  order_type       String
  order_side       String
  order_status     String
  is_maker         Boolean?
  limit_price      String?
  stop_price       String?
  avg_price        Decimal? @db.Decimal(18, 8)
  commission       String?
  net              Decimal? @db.Decimal(18, 8)
  quantity         String
  iceberg_quantity String?
  obs              String?
  updated_at       DateTime @updatedAt
  created_at       DateTime @default(now())

  @@index([order_id], name: "orders_order_id_index")
  @@map("orders")
}

model Monitor {
  id              String   @id @default(uuid())
  symbol          String   @default("*")
  type            String
  broadcast_label String?
  interval        String?
  indexes         String?
  is_active       Boolean  @default(false)
  is_system_mon   Boolean  @default(false)
  logs            Boolean  @default(false)
  updated_at      DateTime @updatedAt
  created_at      DateTime @default(now())

  @@unique([type, symbol, interval], name: "monitors_type_symbol_interval_index")
  @@index([symbol], name: "monitor_symbol_index")
  @@map("monitors")
}
